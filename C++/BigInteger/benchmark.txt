1. pow 
for i in [10, 23]: 
    # timeit {
        37**(2**i)
    }

    CryptoPP:
        10=5335,0.000000
        11=10669,0.000000
        12=21338,0.001000
        13=42676,0.001000
        14=85352,0.004000
        15=170704,0.008000
        16=341407,0.024000
        17=682814,0.070000
        18=1365627,0.213000
        19=2731254,0.639000
        20=5462508,1.914000
        21=10925016,5.757000

    Python:
        10 5335 0.0
        11 10669 0.0
        12 21338 0.00100016593933
        13 42676 0.00300002098083
        14 85352 0.00599980354309
        15 170704 0.0190000534058
        16 341407 0.058000087738
        17 682814 0.170000076294
        18 1365627 0.512000083923
        19 2731254 1.53699994087
        20 5462508 4.61800003052
        21 10925016 13.8489999771

    BigInteger N^2:
        10=5336,0.001000
        11=10672,0.003000
        12=21344,0.014000
        13=42680,0.055000
        14=85352,0.217000
        15=170704,0.876000
        16=341408,3.497000
        17=682816,13.975000

    BigInteger N^1.5, optimal:
        10=5335,0.000000
        11=10669,0.000000
        12=21338,0.001000
        13=42676,0.004000
        14=85352,0.012000
        15=170704,0.035000
        16=341407,0.109000
        17=682814,0.331000
        18=1365627,1.002000
        19=2731254,3.022000
        20=5462508,9.099000
        21=10925016,27.396999


2. mod
v = reduce(lambda a,b: a*b, range(37, 3997))
for i in range(10, 23):
    # timeit {
    for j in range(2, 2**i):
        v % j
    }

    CrytoPP:
        10=0.027000
        11=0.052000
        12=0.105000
        13=0.210000
        14=0.420000
        15=0.842000
        16=1.686000
        17=3.378000
        18=6.761000

    Python:
        10 0.0329999923706
        11 0.0649998188019
        12 0.131000041962
        13 0.260000228882
        14 0.520999908447
        15 1.04299998283
        16 3.53600001335
        17 17.996999979

    BigInteger N^1.5, optimal:
        10=0.030000
        11=0.058000
        12=0.120000
        13=0.237000
        14=0.475000
        15=0.952000
        16=1.904000
        17=9.666000

3. tostring
for i in range(10, 23):
    num = 37**(1<<i)
    # timeit {
        strlen = len(str(num))
    }

    CpytoPP:
        10=0.027000
        11=0.053000
        12=0.105000
        13=0.211000
        14=0.422000
        15=0.842000
        16=1.687000
        17=3.384000
        18=6.770000

    Python:
        10 1606 0.000999927520752
        11 3212 0.00399994850159
        12 6424 0.0120000839233
        13 12847 0.0449998378754
        14 25694 0.181999921799
        15 51387 0.726999998093
        16 102774 2.90599989891
        17 205548 11.6260001659

    BigInteger, N^1.5, optimal:
        10=1606,0.064000
        11=3212,0.006000
        12=6424,0.016000
        13=12847,0.044000
        14=25694,0.158000
        15=51387,0.629000
        16=102774,2.515000
        17=205548,10.066000
